version: '3.8'

services:

  postgres:
    image: postgres:14
    volumes:
      - ./db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - webnet
  
  django:
    build:
      context: ./app
      dockerfile: Dockerfile.django.dev
    container_name: django
    command: ['bash', '-c', 'python manage.py migrate && python manage.py runserver 0.0.0.0:8000']
    env_file:
      - .env
    ports:
      - 8000:8000
    volumes:
      - ./app:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - webnet

  react-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true

  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "9000:8080"
    environment:
      - SWAGGER_JSON=/openapi/main.yml
    volumes:
      - ../openapi:/openapi

networks:
  webnet:
    driver: bridge
